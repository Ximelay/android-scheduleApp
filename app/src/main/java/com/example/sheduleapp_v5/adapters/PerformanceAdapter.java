package com.example.sheduleapp_v5.adapters;

import android.app.AlertDialog;
import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.animation.AlphaAnimation;
import android.view.animation.Animation;
import android.widget.LinearLayout;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.example.sheduleapp_v5.R;
import com.example.sheduleapp_v5.models.PerformanceResponse;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

public class PerformanceAdapter extends RecyclerView.Adapter<PerformanceAdapter.PerformanceViewHolder> {
    private List<PerformanceResponse.Plan.Period.PlanCell> planCells;
    private Context context;

    public PerformanceAdapter(Context context, List<PerformanceResponse.Plan.Period.PlanCell> planCells) {
        this.context = context;
        this.planCells = planCells;
    }

    @NonNull
    @Override
    public PerformanceViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.performance_item, parent, false);
        return new PerformanceViewHolder(view);
    }

    @Override
    public void onBindViewHolder(@NonNull PerformanceViewHolder holder, int position) {
        PerformanceResponse.Plan.Period.PlanCell planCell = planCells.get(position);

        // –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞
        holder.subjectName.setText(planCell.getRowName());

        double percentage = 0;
        if (planCell.getSheets() != null && !planCell.getSheets().isEmpty()) {
            List<PerformanceResponse.Plan.Period.PlanCell.Sheet.Lesson> lessons = planCell.getSheets().get(0).getLessons();
            percentage = calculatePerformancePercentage(lessons);  // –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç —Å —É—á–µ—Ç–æ–º –ù–£
        }

        holder.percentageTextView.setText(String.format("%.2f%%", percentage));

        if (planCell.getSheets() != null && !planCell.getSheets().isEmpty()) {
            holder.subjectCodeTextView.setText(planCell.getSheets().get(0).getTeacherName());
        } else {
            holder.subjectCodeTextView.setText("–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω"); // –ü–æ–∫–∞–∂–µ–º —Ç–µ–∫—Å—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Ç–æ–≥–æ–≤–æ–π –æ—Ü–µ–Ω–∫–∏
        String attestationText;
        boolean isAttested = false;
        if (planCell.getAttestation() != null && planCell.getAttestation().getMarkName() != null) {
            attestationText = "–ò—Ç–æ–≥: " + planCell.getAttestation().getMarkName();
            isAttested = true;
        } else {
            attestationText = "–ò—Ç–æ–≥: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç";
        }

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ü–µ–Ω–∫–∏
        holder.attendanceText.setText(attestationText);

        // –ù–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç: —Å—Ç–∞—Ç—É—Å –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–∏
        holder.attestationStatus.setText(isAttested ? "–ê—Ç—Ç–µ—Å—Ç–æ–≤–∞–Ω ‚úîÔ∏è" : "–ù–µ –∞—Ç—Ç–µ—Å—Ç–æ–≤–∞–Ω ‚ùå");

        holder.itemView.setOnClickListener(v -> showSubjectDetailDialog(planCell));
    }

    private String formatDate(String dateString) {
        SimpleDateFormat inputFormat = new SimpleDateFormat("dd.MM.yyyy HH:mm:ss.SSS");
        SimpleDateFormat outputFormat = new SimpleDateFormat("dd.MM.yyyy");

        try {
            Date date = inputFormat.parse(dateString);
            return outputFormat.format(date);
        } catch (ParseException e) {
            e.printStackTrace();
            return dateString; // –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞, –≤–µ—Ä–Ω—É—Ç—å –∫–∞–∫ –µ—Å—Ç—å
        }
    }

    @Override
    public int getItemCount() {
        return planCells.size();
    }

    private void showSubjectDetailDialog(PerformanceResponse.Plan.Period.PlanCell planCell) {
        AlertDialog.Builder builder = new AlertDialog.Builder(context);
        LayoutInflater inflater = LayoutInflater.from(context);
        View dialogView = inflater.inflate(R.layout.dialog_subject_detail, null);

        TextView subjectName = dialogView.findViewById(R.id.subjectNameTextView);
        TextView teacherName = dialogView.findViewById(R.id.teacherNameTextView);
        TextView attestation = dialogView.findViewById(R.id.attestationTextView);
        LinearLayout lessonsContainer = dialogView.findViewById(R.id.lessonsContainer);

        subjectName.setText(planCell.getRowIndex() + " " + planCell.getRowName());
        teacherName.setText("–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: " + planCell.getSheets().get(0).getTeacherName());
        attestation.setText("–¢–µ–∫—É—â–∞—è –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏—è: " + (planCell.getAttestation() != null ? planCell.getAttestation().getMarkName() : "-"));

        for (PerformanceResponse.Plan.Period.PlanCell.Sheet sheet : planCell.getSheets()) {
            for (PerformanceResponse.Plan.Period.PlanCell.Sheet.Lesson lesson : sheet.getLessons()) {

                // –°–æ–∑–¥–∞–µ–º CardView –¥–ª—è —É—Ä–æ–∫–∞
                androidx.cardview.widget.CardView cardView = new androidx.cardview.widget.CardView(context);
                LinearLayout.LayoutParams cardParams = new LinearLayout.LayoutParams(
                        LinearLayout.LayoutParams.MATCH_PARENT,
                        LinearLayout.LayoutParams.WRAP_CONTENT
                );
                cardParams.setMargins(24, 24, 24, 24); // –ë—ã–ª–æ 16 - —Å—Ç–∞–ª–æ 24 –¥–ª—è –≤–æ–∑–¥—É—Ö–∞
                cardView.setLayoutParams(cardParams);
                cardView.setRadius(16);
                cardView.setCardElevation(8);
                cardView.setUseCompatPadding(true);

                // –í–Ω—É—Ç—Ä–∏ CardView —Å–æ–∑–¥–∞–µ–º TextView
                LinearLayout linearLayout = new LinearLayout(context);
                linearLayout.setOrientation(LinearLayout.VERTICAL);
                linearLayout.setPadding(24, 24, 24, 24);

                TextView lessonView = new TextView(context);
                lessonView.setTextSize(16);

                // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–∞—Ç—É
                String lessonDate = lesson.getLessonDate(); // –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É
                lessonView.setText("üìÖ " + formatDate(lessonDate) + "\n" + "üìö " + lesson.getThemePlanName());

                TextView markView = new TextView(context);
                markView.setTextSize(16);
                String mark = lesson.getMarkName() != null ? lesson.getMarkName() : "-";
                markView.setText("üìù –û—Ü–µ–Ω–∫–∞: " + mark);

                // –†–∞—Å–∫—Ä–∞—Å–∫–∞ –æ—Ü–µ–Ω–∫–∏
                if (mark.equals("2") || mark.toLowerCase().contains("–Ω–µ–∑–∞—á–µ—Ç")) {
                    markView.setTextColor(context.getResources().getColor(android.R.color.holo_red_dark)); // ‚ùóÔ∏è –ö—Ä–∞—Å–Ω—ã–π
                } else if (mark.equals("5") || mark.equals("4") || mark.toLowerCase().contains("–∑–∞—á–µ—Ç")) {
                    markView.setTextColor(context.getResources().getColor(android.R.color.holo_green_dark)); // ‚úÖ –ó–µ–ª–µ–Ω—ã–π
                } else {
                    markView.setTextColor(context.getResources().getColor(android.R.color.black)); // –û–±—ã—á–Ω—ã–π
                }

                linearLayout.addView(lessonView);
                linearLayout.addView(markView);
                cardView.addView(linearLayout);
                Animation animation = new AlphaAnimation(0.0f, 1.0f);
                animation.setDuration(300);
                cardView.startAnimation(animation);
                lessonsContainer.addView(cardView);
            }
        }

        builder.setView(dialogView)
                .setPositiveButton("–ó–∞–∫—Ä—ã—Ç—å", (dialog, which) -> dialog.dismiss())
                .show();
    }

    private double calculatePerformancePercentage(List<PerformanceResponse.Plan.Period.PlanCell.Sheet.Lesson> lessons) {
        int totalCount = 0; // –°–∫–æ–ª—å–∫–æ –ø–∞—Ä —Ä–µ–∞–ª—å–Ω–æ —É—á–∏—Ç—ã–≤–∞–µ–º
        int attendedCount = 0; // –°–∫–æ–ª—å–∫–æ –ø–∞—Ä –ø–æ—Å–µ—â–µ–Ω–æ

        for (PerformanceResponse.Plan.Period.PlanCell.Sheet.Lesson lesson : lessons) {
            String markName = lesson.getMarkName();

            if ("–ù–£".equalsIgnoreCase(markName)) {
                // –ù–£ ‚Äî —É–≤–∞–∂–∞–µ–º–∞—è –ø—Ä–∏—á–∏–Ω–∞, –Ω–µ —Å—á–∏—Ç–∞–µ–º –Ω–∏ —Ç—É–¥–∞, –Ω–∏ —Å—é–¥–∞
                continue;
            }

            // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –≤—Å–µ—Ö –ø–∞—Ä (–∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º –ù–£)
            totalCount++;

            if (markName == null || !"–ù".equalsIgnoreCase(markName)) {
                // –ï—Å–ª–∏ –Ω–µ—Ç –æ—Ç–º–µ—Ç–∫–∏ –ò–õ–ò —ç—Ç–æ –Ω–µ "–ù", —Å—á–∏—Ç–∞–µ–º —á—Ç–æ –ø–æ—Å–µ—â–µ–Ω–æ
                attendedCount++;
            }
            // –ï—Å–ª–∏ "–ù" ‚Äî –Ω–µ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º attendedCount
        }

        return (totalCount == 0) ? 0 : (double) attendedCount / totalCount * 100;
    }

    public static class PerformanceViewHolder extends RecyclerView.ViewHolder {
        TextView subjectName, attendanceText, attestationStatus, subjectCodeTextView, percentageTextView;

        public PerformanceViewHolder(View itemView) {
            super(itemView);
            subjectName = itemView.findViewById(R.id.subjectNameTextView);
            attendanceText = itemView.findViewById(R.id.attendanceTextView);
            attestationStatus = itemView.findViewById(R.id.attestationStatusTextView);
            subjectCodeTextView = itemView.findViewById(R.id.subjectCodeTextView);
            percentageTextView = itemView.findViewById(R.id.percentageTextView);
        }
    }
}
